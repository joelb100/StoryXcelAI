# Floating AI Assistant - Same on Every Page

## Create a Floating AI Assistant Component

Add this to your `dashboard-layout.tsx` (after imports):

```typescript
// FLOATING AI ASSISTANT - Same component on every page
const FloatingAIAssistant = ({ 
  isVisible = true,
  chatMessages, 
  chatMessage, 
  setChatMessage, 
  handleSendMessage, 
  handleKeyPress 
}: {
  isVisible?: boolean;
  chatMessages: any[];
  chatMessage: string;
  setChatMessage: (value: string) => void;
  handleSendMessage: () => void;
  handleKeyPress: (e: React.KeyboardEvent) => void;
}) => {
  if (!isVisible) return null;

  return (
    <div 
      id="floating-ai-assistant"
      className="fixed bottom-4 left-1/2 transform -translate-x-1/2 z-50"
      style={{
        width: 'min(90vw, 14.5in)', // Responsive but max 14.5 inches
        height: '300px',             // Fixed height - change this to resize
        maxWidth: '14.5in'
      }}
    >
      {/* Floating container with shadow and rounded corners */}
      <div 
        className="w-full h-full rounded-lg shadow-2xl border border-gray-300"
        style={{ backgroundColor: '#d4dee7' }} // Same color as Dashboard
      >
        {/* Project Name Section - exactly like Dashboard */}
        <div className="px-4 pt-3 pb-2">
          <div className="mb-2">
            <h3 className="text-sm font-medium text-slate-700">Project Name</h3>
          </div>
          
          {/* Three project cards - exactly like Dashboard */}
          <div className="flex gap-2" style={{ height: '50px' }}>
            <div className="rounded-lg border-0 h-full flex-1" style={{ backgroundColor: '#3f4c5f' }}></div>
            <div className="rounded-lg border-0 h-full flex-1" style={{ backgroundColor: '#3f4c5f' }}></div>
            <div className="rounded-lg border-0 h-full flex-1" style={{ backgroundColor: '#3f4c5f' }}></div>
          </div>
        </div>

        {/* AI Assistant - exactly like Dashboard */}
        <div className="px-4 pb-3 h-full">
          <AIStoryAssistant 
            chatMessages={chatMessages}
            chatMessage={chatMessage}
            setChatMessage={setChatMessage}
            handleSendMessage={handleSendMessage}
            handleKeyPress={handleKeyPress}
          />
        </div>
      </div>
    </div>
  );
};
```

## Alternative: Docked Bottom Position

If you prefer it docked at the bottom instead of floating:

```typescript
// DOCKED AI ASSISTANT - Fixed at bottom of screen
const DockedAIAssistant = ({ 
  isVisible = true,
  chatMessages, 
  chatMessage, 
  setChatMessage, 
  handleSendMessage, 
  handleKeyPress 
}: {
  isVisible?: boolean;
  chatMessages: any[];
  chatMessage: string;
  setChatMessage: (value: string) => void;
  handleSendMessage: () => void;
  handleKeyPress: (e: React.KeyboardEvent) => void;
}) => {
  if (!isVisible) return null;

  return (
    <div 
      id="docked-ai-assistant"
      className="fixed bottom-0 left-0 right-0 z-50 border-t border-gray-300"
      style={{
        height: '280px',            // Fixed height
        backgroundColor: '#f8f9fa'  // Light background
      }}
    >
      {/* Content container */}
      <div className="max-w-[15.25in] mx-auto h-full px-4 py-3">
        {/* Project Name Section */}
        <div className="mb-3">
          <div className="mb-2">
            <h3 className="text-sm font-medium text-slate-700">Project Name</h3>
          </div>
          
          {/* Three project cards */}
          <div className="flex gap-4" style={{ height: '60px' }}>
            <div className="rounded-lg border-0 h-full flex-1" style={{ backgroundColor: '#3f4c5f' }}></div>
            <div className="rounded-lg border-0 h-full flex-1" style={{ backgroundColor: '#3f4c5f' }}></div>
            <div className="rounded-lg border-0 h-full flex-1" style={{ backgroundColor: '#3f4c5f' }}></div>
          </div>
        </div>

        {/* AI Assistant */}
        <div className="h-full">
          <AIStoryAssistant 
            chatMessages={chatMessages}
            chatMessage={chatMessage}
            setChatMessage={setChatMessage}
            handleSendMessage={handleSendMessage}
            handleKeyPress={handleKeyPress}
          />
        </div>
      </div>
    </div>
  );
};
```

## Add Toggle State

Add this state to control the floating AI:

```typescript
// Add this state near your other useState declarations
const [isAIVisible, setIsAIVisible] = useState(true);
```

## Update Main Layout

Replace your main dashboard layout to include the floating AI:

```typescript
return (
  <div className="h-screen bg-slate-800 flex flex-col overflow-hidden">
    {/* Your existing header */}
    <header className="border-b border-slate-700 grid grid-cols-28 h-16 relative z-50" style={{ backgroundColor: '#0d274c' }}>
      {/* Header content stays the same */}
    </header>

    {/* Main Content Area */}
    <div className="flex-1 grid grid-cols-28 overflow-hidden">
      {/* All your existing sidebar and content */}
      
      {/* Desktop Layout */}
      <div className="hidden lg:contents">
        {/* Left sidebars stay the same */}
        
        {/* Main Content - Remove AI Assistant from here */}
        <div className={`transition-all duration-300 ${
          activeTab === 'dashboard' 
            ? 'col-span-19' 
            : activeTab === 'story'
              ? (isFriendsListOpen || isSiteLinksOpen ? 'col-span-19' : 'col-span-22')
              : 'col-span-22'
        }`}>
          {activeTab === 'dashboard' ? (
            // Dashboard without AI Assistant
            <div className="bg-gray-100 flex flex-col h-full">
              <div className="bg-white border-b border-gray-200 px-4 pb-4">
                <h2 className="text-lg font-semibold text-slate-800">Dashboard</h2>
              </div>
              <div className="flex-1 flex justify-center overflow-hidden">
                <div className="w-full max-w-[15.25in] p-4 flex flex-col h-full">
                  {/* Main Dashboard Section - Full height now */}
                  <div className="flex-1 flex justify-center items-center">
                    <div className="rounded-lg border-0 w-full max-w-[14.5in] h-full" style={{ backgroundColor: '#3f4c5f' }}>
                      {/* Main dashboard content area */}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ) : activeTab === 'story' ? (
            // Story Builder without AI Assistant
            <div className="bg-gray-100 flex flex-col h-full">
              <div className="bg-white border-b border-gray-200 px-4 pb-4">
                <h2 className="text-lg font-semibold text-slate-800">Story Builder</h2>
              </div>
              <div className="flex-1 flex justify-center overflow-hidden">
                <div className="w-full max-w-[15.25in] p-4 h-full">
                  {/* Story Editor - Full height */}
                  <div className="flex justify-center items-center h-full">
                    <div className="bg-white border border-gray-200 shadow-sm rounded-lg overflow-hidden w-full max-w-[14.5in] h-full">
                      <StoryBuilder 
                        projectName={projectName}
                        projectType={projectType}
                        lengthPages={typeof lengthPages === 'number' ? lengthPages : undefined}
                        lengthMinutes={typeof lengthMinutes === 'number' ? lengthMinutes : undefined}
                        genre={genreLabel || undefined}
                        genreDef={genreDef || undefined}
                        subGenre={subGenreLabel || undefined}
                        subGenreDef={subGenreDef || undefined}
                        theme={themeLabel || undefined}
                        themeDef={themeDef || undefined}
                        subTheme={subThemeLabel || undefined}
                        subThemeDef={subThemeDef || undefined}
                        centralConflict={centralConflictLabel || undefined}
                        centralConflictDef={centralConflictDef || undefined}
                        storyHtml={storyHtml}
                        setStoryHtml={setStoryHtml}
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ) : (
            // All other builders without AI Assistant
            <div className="bg-gray-100 flex flex-col h-full">
              <div className="bg-white border-b border-gray-200 px-4 pb-4">
                <h2 className="text-lg font-semibold text-slate-800">
                  {activeTab === 'world' && 'World Builder'}
                  {activeTab === 'production' && 'Production Builder'}
                  {activeTab === 'asset' && 'Asset Builder'}
                  {activeTab === 'script' && 'Script Builder'}
                  {activeTab === 'deck' && 'Deck Builder'}
                </h2>
              </div>
              <div className="flex-1 flex justify-center overflow-hidden">
                <div className="w-full max-w-[15.25in] p-4 flex flex-col h-full">
                  {/* Builder content - Full height */}
                  <div className="flex-1 flex justify-center items-center">
                    <div className="rounded-lg border-0 w-full max-w-[14.5in] h-full" style={{ backgroundColor: '#3f4c5f' }}>
                      {/* Builder content area */}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}
        </div>
        
        {/* Right sidebars stay the same */}
      </div>
    </div>

    {/* FLOATING AI ASSISTANT - Same on every page */}
    <FloatingAIAssistant 
      isVisible={isAIVisible}
      chatMessages={chatMessages}
      chatMessage={chatMessage}
      setChatMessage={setChatMessage}
      handleSendMessage={handleSendMessage}
      handleKeyPress={handleKeyPress}
    />
  </div>
);
```

## Add Toggle Button (Optional)

Add a button to show/hide the floating AI:

```typescript
{/* Toggle AI Button - Add to header or sidebar */}
<Button
  variant="ghost"
  size="sm"
  onClick={() => setIsAIVisible(!isAIVisible)}
  className="text-slate-300 hover:text-white hover:bg-slate-700"
  title={isAIVisible ? "Hide AI Assistant" : "Show AI Assistant"}
>
  <MessageSquare className="w-5 h-5" />
</Button>
```

## Benefits:

- ✅ **Literally the same component** on every page
- ✅ **Always visible** and accessible 
- ✅ **Consistent positioning** and styling
- ✅ **Can be toggled** on/off
- ✅ **Floating** so it doesn't affect page layouts
- ✅ **Responsive** design that works on all screen sizes

Choose floating or docked based on your preference!