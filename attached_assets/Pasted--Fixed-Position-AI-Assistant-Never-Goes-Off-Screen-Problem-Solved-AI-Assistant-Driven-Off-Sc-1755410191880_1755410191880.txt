# Fixed Position AI Assistant - Never Goes Off-Screen

## Problem Solved: AI Assistant Driven Off-Screen by Content

When Story Beats content expands, it pushes the AI Assistant below the visible area. Solution: Make the AI Assistant position absolutely fixed.

## Solution 1: Fixed Position AI (Recommended)

Add this to your `dashboard-layout.tsx`:

```typescript
// FIXED POSITION AI ASSISTANT - Never moves, always accessible
const FixedPositionAI = ({ 
  chatMessages, 
  chatMessage, 
  setChatMessage, 
  handleSendMessage, 
  handleKeyPress 
}: {
  chatMessages: any[];
  chatMessage: string;
  setChatMessage: (value: string) => void;
  handleSendMessage: () => void;
  handleKeyPress: (e: React.KeyboardEvent) => void;
}) => (
  <div 
    id="fixed-ai-assistant"
    className="fixed bottom-4 left-1/2 transform -translate-x-1/2 z-50"
    style={{
      width: 'min(90vw, 14.5in)',
      height: '200px',           // Fixed height - never changes
      maxWidth: '14.5in',
      pointerEvents: 'auto'      // Ensure it's clickable
    }}
  >
    <div className="w-full h-full bg-white border border-gray-300 shadow-lg rounded-lg">
      <AIStoryAssistant 
        chatMessages={chatMessages}
        chatMessage={chatMessage}
        setChatMessage={setChatMessage}
        handleSendMessage={handleSendMessage}
        handleKeyPress={handleKeyPress}
      />
    </div>
  </div>
);
```

## Solution 2: Story Builder with Fixed AI

Update your Story Builder layout to not include AI Assistant, since it's now fixed:

```typescript
) : activeTab === 'story' ? (
  <div className="bg-gray-100 flex flex-col h-full">
    {/* Story Builder Header */}
    <div className="bg-white border-b border-gray-200 px-4 pb-4">
      <h2 className="text-lg font-semibold text-slate-800">Story Builder</h2>
    </div>
    
    {/* Story Content - Full height, AI is floating separately */}
    <div className="flex-1 flex justify-center overflow-hidden">
      <div className="w-full max-w-[15.25in] p-4 h-full">
        {/* Story Editor - Gets full height, scrolls independently */}
        <div 
          className="bg-white border border-gray-200 shadow-sm rounded-lg overflow-hidden w-full h-full"
          style={{ 
            marginBottom: '220px' // Leave space for fixed AI at bottom
          }}
        >
          <StoryBuilder 
            projectName={projectName}
            projectType={projectType}
            lengthPages={typeof lengthPages === 'number' ? lengthPages : undefined}
            lengthMinutes={typeof lengthMinutes === 'number' ? lengthMinutes : undefined}
            genre={genreLabel || undefined}
            genreDef={genreDef || undefined}
            subGenre={subGenreLabel || undefined}
            subGenreDef={subGenreDef || undefined}
            theme={themeLabel || undefined}
            themeDef={themeDef || undefined}
            subTheme={subThemeLabel || undefined}
            subThemeDef={subThemeDef || undefined}
            centralConflict={centralConflictLabel || undefined}
            centralConflictDef={centralConflictDef || undefined}
            storyHtml={storyHtml}
            setStoryHtml={setStoryHtml}
          />
        </div>
      </div>
    </div>
  </div>
```

## Solution 3: Add Fixed AI to Main Layout

Add the fixed AI to your main layout so it appears on every page:

```typescript
return (
  <div className="h-screen bg-slate-800 flex flex-col overflow-hidden">
    {/* Existing header */}
    <header className="border-b border-slate-700 grid grid-cols-28 h-16 relative z-50" style={{ backgroundColor: '#0d274c' }}>
      {/* Header content */}
    </header>

    {/* Main Content Area */}
    <div className="flex-1 grid grid-cols-28 overflow-hidden">
      {/* All existing sidebar and content */}
      
      {/* Story Builder without AI Assistant */}
      {activeTab === 'story' ? (
        // Story content without AI - AI is now fixed position
        <div className="bg-gray-100 flex flex-col h-full">
          <div className="bg-white border-b border-gray-200 px-4 pb-4">
            <h2 className="text-lg font-semibold text-slate-800">Story Builder</h2>
          </div>
          
          <div className="flex-1 flex justify-center overflow-hidden">
            <div className="w-full max-w-[15.25in] p-4 h-full">
              <div className="bg-white border border-gray-200 shadow-sm rounded-lg overflow-hidden w-full h-full">
                <StoryBuilder 
                  projectName={projectName}
                  projectType={projectType}
                  lengthPages={typeof lengthPages === 'number' ? lengthPages : undefined}
                  lengthMinutes={typeof lengthMinutes === 'number' ? lengthMinutes : undefined}
                  genre={genreLabel || undefined}
                  genreDef={genreDef || undefined}
                  subGenre={subGenreLabel || undefined}
                  subGenreDef={subGenreDef || undefined}
                  theme={themeLabel || undefined}
                  themeDef={themeDef || undefined}
                  subTheme={subThemeLabel || undefined}
                  subThemeDef={subThemeDef || undefined}
                  centralConflict={centralConflictLabel || undefined}
                  centralConflictDef={centralConflictDef || undefined}
                  storyHtml={storyHtml}
                  setStoryHtml={setStoryHtml}
                />
              </div>
            </div>
          </div>
        </div>
      ) : (
        // All other pages keep their normal layouts
        // Dashboard, World, Production, etc. - unchanged
      )}
    </div>

    {/* FIXED POSITION AI ASSISTANT - Always visible, never moves */}
    <FixedPositionAI 
      chatMessages={chatMessages}
      chatMessage={chatMessage}
      setChatMessage={setChatMessage}
      handleSendMessage={handleSendMessage}
      handleKeyPress={handleKeyPress}
    />
  </div>
);
```

## Alternative: Docked Bottom AI

If you prefer it docked to the bottom instead of floating:

```typescript
// DOCKED AI ASSISTANT - Fixed at bottom of screen
const DockedAI = ({ 
  chatMessages, 
  chatMessage, 
  setChatMessage, 
  handleSendMessage, 
  handleKeyPress 
}: {
  chatMessages: any[];
  chatMessage: string;
  setChatMessage: (value: string) => void;
  handleSendMessage: () => void;
  handleKeyPress: (e: React.KeyboardEvent) => void;
}) => (
  <div 
    id="docked-ai-assistant"
    className="fixed bottom-0 left-0 right-0 z-50 bg-white border-t border-gray-300 shadow-lg"
    style={{
      height: '200px'  // Fixed height
    }}
  >
    <div className="max-w-[15.25in] mx-auto h-full px-4 py-2">
      <AIStoryAssistant 
        chatMessages={chatMessages}
        chatMessage={chatMessage}
        setChatMessage={setChatMessage}
        handleSendMessage={handleSendMessage}
        handleKeyPress={handleKeyPress}
      />
    </div>
  </div>
);
```

## Key Benefits:

✅ **Never goes off-screen** - AI Assistant stays fixed in position
✅ **Always accessible** - No matter how much content is in Story Beats
✅ **Same on every page** - Consistent position across all tabs
✅ **Content can scroll freely** - Story Beats can expand without affecting AI
✅ **Fixed height** - AI Assistant never changes size
✅ **High z-index** - Always appears above other content

## Result:
- Story Beats section can fill with as much content as needed
- AI Assistant remains visible and accessible at the bottom
- No more getting pushed off-screen
- Consistent experience across all pages

This solves the core problem - the AI Assistant will never disappear no matter how much content fills the Story Beats section!